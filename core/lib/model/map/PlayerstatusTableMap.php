<?php



/**
 * This class defines the structure of the 'Playerstatus' table.
 *
 *
 * This class was autogenerated by Propel 1.5.3 on:
 *
 * Tue May 24 10:36:30 2011
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    propel.generator.lib.model.map
 */
class PlayerstatusTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.PlayerstatusTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('Playerstatus');
		$this->setPhpName('Playerstatus');
		$this->setClassname('Playerstatus');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(false);
		// columns
		$this->addForeignPrimaryKey('USER_ID', 'UserId', 'INTEGER' , 'User', 'ID', true, null, null);
		$this->addColumn('ON_FLIGHT', 'OnFlight', 'BOOLEAN', false, null, null);
		$this->addColumn('POINTS', 'Points', 'VARCHAR', false, 32, null);
		$this->addColumn('BONUS', 'Bonus', 'INTEGER', false, null, null);
		$this->addColumn('FLIGHT_POINTS', 'FlightPoints', 'INTEGER', false, null, null);
		$this->addColumn('AVAILABLE_MILES', 'AvailableMiles', 'INTEGER', false, null, null);
		$this->addColumn('FLIGHTMILES_TOTAL', 'FlightmilesTotal', 'INTEGER', false, null, null);
		$this->addColumn('FLIGHTMILES_WEEK', 'FlightmilesWeek', 'INTEGER', false, null, null);
		$this->addColumn('FLIGHT_COUNT', 'FlightCount', 'INTEGER', false, null, null);
		$this->addColumn('HOMEBASE_FLIGHT', 'HomebaseFlight', 'INTEGER', false, null, null);
		$this->addColumn('PLAYER_RANK', 'PlayerRank', 'VARCHAR', false, 128, null);
		$this->addColumn('WEEK1', 'Week1', 'INTEGER', false, null, null);
		$this->addColumn('WEEK2', 'Week2', 'INTEGER', false, null, null);
		$this->addColumn('WEEK3', 'Week3', 'INTEGER', false, null, null);
		$this->addColumn('WEEK4', 'Week4', 'INTEGER', false, null, null);
		$this->addColumn('WEEK5', 'Week5', 'INTEGER', false, null, null);
		$this->addColumn('WEEK6', 'Week6', 'INTEGER', false, null, null);
		$this->addColumn('WEEK7', 'Week7', 'INTEGER', false, null, null);
		$this->addColumn('WEEK8', 'Week8', 'INTEGER', false, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('User', 'User', RelationMap::MANY_TO_ONE, array('User_id' => 'id', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // PlayerstatusTableMap
